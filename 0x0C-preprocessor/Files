
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="Holberton School">
    <link rel="icon" href="../../favicon.ico">
    <link href='https://fonts.googleapis.com/css?family=Lora:400,700' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">

    <title>Holberton School's awesome intranet</title>

    <link rel="stylesheet" media="all" href="/assets/application-db3812a3f2ca9d0bad785735e12c914d1cd84a76ea29dae954e190aef0d9dbcc.css" />
    <script src="/assets/application-61b15b5a41ec156b1d95d4aad997cc1cff950a845ea6486accc77444aca1bff6.js"></script>
  <link rel="shortcut icon" type="image/x-icon" href="/assets/favicon-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.ico" />
  <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="MY7waHDVL1PYYY/18cMEmWvtyDtZET9XpfzGifKx/NH2rPwNqTkZV7URfncwZsce8TL2fCFe5rQ3LchMrNzJOw==" />

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>

  <body class="signed_in">

      <nav id="nav-left" class="hidden-xs title-font">
        <a href="/">
          <div id="holberton-logo">
            <img alt="Holberton School" src="/assets/holberton-logo-simplified-d4e8a1e8bf5ad93c8c3ce32895b4b53749b477b7ba7342d7f064e6883bcd3be2.png" />
          </div>
</a>        <ul>
            <li>
    <a href="/dashboards/my_planning">
        <div class="icon">
          <i class="fa fa-calendar"></i>
        </div>
      My planning
</a>  </li>
  <li>
    <a href="/dashboards/my_current_projects">
        <div class="icon">
          <i class="fa fa-list"></i>
        </div>
      My projects
</a>  </li>
  <li>
    <a href="/dashboards/my_concepts">
        <div class="icon">
          <i class="fa fa-file-text"></i>
        </div>
      My concepts
</a>  </li>
  <li>
    <a href="/dashboards/my_batchmates">
        <div class="icon">
          <i class="fa fa-users"></i>
        </div>
      My batchmates
</a>  </li>
  <li>
    <a href="/dashboards/corrections_i_can_make">
        <div class="icon">
          <i class="fa fa-check"></i>
        </div>
      QA reviews I can make
</a>  </li>
  <li>
    <a href="/dashboards/my_captain_log">
        <div class="icon">
          <i class="fa fa-book"></i>
        </div>
      My Captain's Logs
</a>  </li>
  <li>
    <a href="/dashboards/my_officers">
        <div class="icon">
          <i class="fa fa-building"></i>
        </div>
      My Officers
</a>  </li>
  <li>
    <a href="/dashboards/my_server">
        <div class="icon">
          <i class="fa fa-server"></i>
        </div>
      My Servers
</a>  </li>

<li>
  <a href="/users/my_profile">
      <div class="icon">
        <i class="fa fa-user"></i>
      </div>
    My profile
</a></li>

        </ul>
      </nav>

    <main>

        <nav class="navbar navbar-default navbar-main visible-xs">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              <a class="navbar-brand" href="/">
                  <img alt="Holberton School" src="/assets/holberton-logo-simplified-d4e8a1e8bf5ad93c8c3ce32895b4b53749b477b7ba7342d7f064e6883bcd3be2.png" />
</a>            </div>
            <div id="navbar" class="collapse navbar-collapse">
              <ul class="nav navbar-nav">
                  <li>
    <a href="/dashboards/my_planning">
      My planning
</a>  </li>
  <li>
    <a href="/dashboards/my_current_projects">
      My projects
</a>  </li>
  <li>
    <a href="/dashboards/my_concepts">
      My concepts
</a>  </li>
  <li>
    <a href="/dashboards/my_batchmates">
      My batchmates
</a>  </li>
  <li>
    <a href="/dashboards/corrections_i_can_make">
      QA reviews I can make
</a>  </li>
  <li>
    <a href="/dashboards/my_captain_log">
      My Captain's Logs
</a>  </li>
  <li>
    <a href="/dashboards/my_officers">
      My Officers
</a>  </li>
  <li>
    <a href="/dashboards/my_server">
      My Servers
</a>  </li>

<li>
  <a href="/users/my_profile">
    My profile
</a></li>

              </ul>

              <ul class="nav navbar-nav navbar-right">
                <li class="dropdown">
                  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Richard Sim <span class="caret"></span></a>
                  <ul class="dropdown-menu">
                    <li><a rel="nofollow" data-method="delete" href="/auth/sign_out">Log out</a></li>
                  </ul>
                </li>
              </ul>

            </div><!--/.nav-collapse -->
          </div>
        </nav>



      <article class="">
          <div class="alert alert-info sm-gap">You just released the optional tasks of this project. Have fun!</div>

        
<h1 class="gap">0x0C. C - Preprocesssor</h1>

<div id="project_id" style="display: none" data-project-id="224"></div>

<p class="sm-gap">
  <small>
    <i class="fa fa-folder-open"></i>
    Low-level programming &amp; Algorithm â€• Hatching out
  </small>
</p>

  <p>
    <em>
      <small>
        <i class="fa fa-user"></i> by Julien Barbier, co-founder at Holberton School &amp; Johan Euphrosine, Software Engineer at Google
      </small>
    </em>
  </p>



  <p>
    <small>
      <i class="fa fa-calendar"></i>
        Ongoing project - started 11-14-2016, must end by 11-15-2016 (in about 14 hours)
        - <span id="student_task_done_percentage">you're 0</span>% done.
    </small>
  </p>

  <p>
    <small>
      <i class="fa fa-check-square"></i>
      QA review fully automated.
    </small>
  </p>




<article id="description" class="gap formatted-content">
  <h2>Readme</h2>

<p>Read <a href="https://www.youtube.com/watch?v=VDslRumKvRA">Understanding C program Compilation Process</a>, <a href="https://gcc.gnu.org/onlinedocs/gcc-5.1.0/cpp/Object-like-Macros.html#Object-like-Macros">Object-like Macros</a>, <a href="https://gcc.gnu.org/onlinedocs/gcc-5.1.0/cpp/Macro-Arguments.html#Macro-Arguments">Macro Arguments</a>, <a href="https://www.youtube.com/watch?v=X6HiYbY3Uak">Pre Processor Directives in C</a>, <a href="http://www.cprogramming.com/tutorial/cpreprocessor.html">The C Preprocessor</a>, <a href="https://gcc.gnu.org/onlinedocs/gcc-5.1.0/cpp/Standard-Predefined-Macros.html#Standard-Predefined-Macros">Standard Predefined Macros</a>, and <a href="https://en.wikipedia.org/wiki/Include_guard">include guard</a>.</p>

<p>Read quickly through <a href="https://gcc.gnu.org/onlinedocs/gcc-5.1.0/cpp/Common-Predefined-Macros.html#Common-Predefined-Macros">Common Predefined Macros</a></p>

<h2>What you should learn from this project</h2>

<p>At the end of this project you are expected to be able to explain to anyone, without the help of Google:</p>

<ul>
<li>What are macros and how to use them</li>
<li>What are the most common predefined macros</li>
<li>How to include guard your header files</li>
</ul>

<h2>Requirements</h2>

<ul>
<li>Allowed editors: <code>vi</code>, <code>vim</code>, <code>emacs</code></li>
<li>All your files will be compiled on Ubuntu 14.04 LTS</li>
<li>Your programs and functions will be compiled with <code>gcc</code> using the flags <code>-Wall</code> <code>-Werror</code> <code>-Wextra</code> <code>and -pedantic</code></li>
<li>All your files should end with a new line</li>
<li>A <code>README.md</code> file, at the root of the folder of the project is mandatory</li>
<li>Your code should use the <code>Betty</code> style. It will be checked using <a href="https://github.com/holbertonschool/Betty/blob/master/betty-style.pl">betty-style.pl</a> and <a href="https://github.com/holbertonschool/Betty/blob/master/betty-doc.pl">betty-doc.pl</a></li>
<li>You are not allowed to use global variables</li>
<li>No more than 5 functions per file</li>
<li>The only C standard library functions allowed are <code>malloc</code>, <code>free</code> and <code>exit</code>. Any use of functions like <code>printf</code>, <code>puts</code>, <code>calloc</code>, <code>realloc</code> etc... is forbidden</li>
<li>You are allowed to use <a href="https://github.com/holbertonschool/_putchar.c/blob/master/_putchar.c">_putchar</a></li>
<li>You don&#39;t have to push <code>_putchar.c</code>, we will use our file. If you do it won&#39;t be taken into account</li>
<li>In the following examples, the <code>main.c</code> files are showed as examples. You can use them to test your functions, but you don&#39;t have to push them to your repo (if you do we won&#39;t take them into account). We will use our own <code>main.c</code> files at compilation. Our <code>main.c</code> files might be different from the one showed in the examples</li>
<li>The prototypes of all your functions and the prototype of the function <code>_putchar</code> should be included in your header file called <code>holberton.h</code></li>
<li>Don&#39;t forget to push your header file</li>
<li>All your header files should be include guarded</li>
</ul>

</article>

  <hr class="gap">
  <h2 class="gap">Tasks</h2>
  <section class="formatted-content">
        <div data-role="task945" data-position="1">
            <div class=" clearfix gap" id="task-945">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="945">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="945" data-toggle="modal" data-target="#task-945-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-945-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "Object-like Macro"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/945/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="945" >
            Help!
          </button>
    </div>

  <h4 class="task">
    0. Object-like Macro
    <span class="alert alert-warning mandatory-optional">
      mandatory
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Create a header file that defines a macro named <code>SIZE</code> as an abbreviation for the token <code>1024</code>.</p>

<pre><code>julien@ubuntu:~/0x0c. macro, structures$ cat 0-main.c
#include &quot;0-object_like_macro.h&quot;
#include &quot;0-object_like_macro.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
 *
 * Return: Always 0.
 */
int main(void)
{
    int s;

    s = 98 + SIZE;
    printf(&quot;%d\n&quot;, s);
    return (0);
}
julien@ubuntu:~/0x0c. macro, structures$ make
gcc -Wall -pedantic -Werror -Wextra 0-main.c -o a
julien@ubuntu:~/0x0c. macro, structures$ ./a 
1122
julien@ubuntu:~/0x0c. macro, structures$ 
</code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>0-object_like_macro.h</code></li>
    </ul>



  
      
</div>

        </div>
        <div data-role="task946" data-position="2">
            <div class=" clearfix gap" id="task-946">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="946">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="946" data-toggle="modal" data-target="#task-946-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-946-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "Pi"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/946/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="946" >
            Help!
          </button>
    </div>

  <h4 class="task">
    1. Pi
    <span class="alert alert-warning mandatory-optional">
      mandatory
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Create a header file that defines a macro named <code>PI</code> as an abbreviation for the token <code>3.14159265359</code>.</p>

<pre><code>julien@ubuntu:~/0x0c. macro, structures$ cat 1-main.c
#include &quot;1-pi.h&quot;
#include &quot;1-pi.h&quot;
#include &lt;stdio.h&gt;

/**
 * main - check the code for Holberton School students.
 *
 * Return: Always 0.
 */
int main(void)
{
    float a;
    float r;

    r = 98;
    a = PI * r * r;
    printf(&quot;%.3f\n&quot;, a);
    return (0);
}
julien@ubuntu:~/0x0c. macro, structures$ gcc -Wall -pedantic -Werror -Wextra 1-main.c -o b
julien@ubuntu:~/0x0c. macro, structures$ ./b
30171.855
julien@ubuntu:~/0x0c. macro, structures$ 
</code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>1-pi.h</code></li>
    </ul>



  
      
</div>

        </div>
        <div data-role="task947" data-position="3">
            <div class=" clearfix gap" id="task-947">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="947">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="947" data-toggle="modal" data-target="#task-947-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-947-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "File name"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/947/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="947" >
            Help!
          </button>
    </div>

  <h4 class="task">
    2. File name
    <span class="alert alert-warning mandatory-optional">
      mandatory
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Write a program that prints the name of the file it was compiled from, followed by a new line.</p>

<ul>
<li>You are allowed to use the standard library</li>
</ul>

<pre><code>julien@ubuntu:~/0x0c. macro, structures$ gcc -Wall -pedantic -Werror -Wextra 2-main.c -o c
julien@ubuntu:~/0x0c. macro, structures$ ./c 
2-main.c
julien@ubuntu:~/0x0c. macro, structures$ cp 2-main.c 02-main.c
julien@ubuntu:~/0x0c. macro, structures$ gcc -Wall -pedantic -Werror -Wextra 02-main.c -o cc
julien@ubuntu:~/0x0c. macro, structures$ ./cc
02-main.c
julien@ubuntu:~/0x0c. macro, structures$ 
</code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>2-main.c</code></li>
    </ul>



  
      
</div>

        </div>
        <div data-role="task948" data-position="4">
            <div class=" clearfix gap" id="task-948">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="948">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="948" data-toggle="modal" data-target="#task-948-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-948-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "Function-like macro"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/948/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="948" >
            Help!
          </button>
    </div>

  <h4 class="task">
    3. Function-like macro
    <span class="alert alert-warning mandatory-optional">
      mandatory
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Write a function-like macro <code>ABS(x)</code> that computes the absolute value of a number <code>x</code>.</p>

<pre><code>julien@ubuntu:~/0x0c. macro, structures$ cat 3-main.c
#include &lt;stdio.h&gt;
#include &quot;3-function_like_macro.h&quot;
#include &quot;3-function_like_macro.h&quot;

/**
 * main - check the code for Holberton School students.
 *
 * Return: Always 0.
 */
int main(void)
{
    int i;
    int j;

    i = ABS(-98) * 10;
    j = ABS(98) * 10;
    printf(&quot;%d, %d\n&quot;, i, j);
    return (0);
}
julien@ubuntu:~/0x0c. macro, structures$ gcc -Wall -pedantic -Werror -Wextra 3-main.c -o d
julien@ubuntu:~/0x0c. macro, structures$ ./d 
980, 980
julien@ubuntu:~/0x0c. macro, structures$ 
</code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>3-function_like_macro.h</code></li>
    </ul>



  
      
</div>

        </div>
        <div data-role="task949" data-position="5">
            <div class=" clearfix gap" id="task-949">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="949">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="949" data-toggle="modal" data-target="#task-949-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-949-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "SUM"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/949/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="949" >
            Help!
          </button>
    </div>

  <h4 class="task">
    4. SUM
    <span class="alert alert-warning mandatory-optional">
      mandatory
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Write a function-like macro <code>SUM(x, y)</code> that computes the sum of the numbers <code>x</code> and <code>y</code>.</p>

<pre><code>julien@ubuntu:~/0x0c. macro, structures$ cat 4-main.c
#include &lt;stdio.h&gt;
#include &quot;4-sum.h&quot;
#include &quot;4-sum.h&quot;

/**
 * main - check the code for Holberton School students.
 *
 * Return: Always 0.
 */
int main(void)
{
    int s;

    s = SUM(98, 1024);
    printf(&quot;%d\n&quot;, s);
    return (0);
}
julien@ubuntu:~/0x0c. macro, structures$ gcc -Wall -pedantic -Werror -Wextra 4-main.c -o e
julien@ubuntu:~/0x0c. macro, structures$ ./e 
1122
julien@ubuntu:~/0x0c. macro, structures$ 
</code></pre>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>4-sum.h</code></li>
    </ul>



  
      
</div>

        </div>
        <div data-role="task956" data-position="6">
            <div class=" clearfix gap" id="task-956">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="956">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="956" data-toggle="modal" data-target="#task-956-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-956-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "Worst abuse of the C preprocessor (IOCCC winner, 1986)"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/956/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="956" >
            Help!
          </button>
    </div>

  <h4 class="task">
    5. Worst abuse of the C preprocessor (IOCCC winner, 1986)
    <span class="alert alert-info mandatory-optional">
      #advanced
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Compile this program, written by Jim Hague (UK), and feed ascii text into standard input.</p>

<ul>
<li>Write a blog post to explain what this program does, how it works, and &quot;de-obfuscate&quot; it step by step for the reader</li>
<li>You blog post should have at least one picture, at the top of the blog post</li>
<li>Publish your blog post on Medium or LinkedIn</li>
<li>Share your blog post at least on Twitter and LinkedIn</li>
</ul>

<p>Once done, fill <a href="https://goo.gl/forms/VC8smPCmhYmCGsgF3">this form</a></p>

<pre><code>julien@ubuntu:~/c/ioccc$ cat hague.c 
#define DIT (
#define DAH )
#define __DAH   ++
#define DITDAH  *
#define DAHDIT  for
#define DIT_DAH malloc
#define DAH_DIT gets
#define _DAHDIT char
_DAHDIT _DAH_[]=&quot;ETIANMSURWDKGOHVFaLaPJBXCYZQb54a3d2f16g7c8a90l?e&#39;b.s;i,d:&quot;
;main           DIT         DAH{_DAHDIT
DITDAH          _DIT,DITDAH     DAH_,DITDAH DIT_,
DITDAH          _DIT_,DITDAH        DIT_DAH DIT
DAH,DITDAH      DAH_DIT DIT     DAH;DAHDIT
DIT _DIT=DIT_DAH    DIT 81          DAH,DIT_=_DIT
__DAH;_DIT==DAH_DIT DIT _DIT        DAH;__DIT
DIT&#39;\n&#39;DAH DAH      DAHDIT DIT      DAH_=_DIT;DITDAH
DAH_;__DIT      DIT         DITDAH
_DIT_?_DAH DIT      DITDAH          DIT_ DAH:&#39;?&#39;DAH,__DIT
DIT&#39; &#39;DAH,DAH_ __DAH    DAH DAHDIT      DIT
DITDAH          DIT_=2,_DIT_=_DAH_; DITDAH _DIT_&amp;&amp;DIT
DITDAH _DIT_!=DIT   DITDAH DAH_&gt;=&#39;a&#39;?   DITDAH
DAH_&amp;223:DITDAH     DAH_ DAH DAH;       DIT
DITDAH          DIT_ DAH __DAH,_DIT_    __DAH DAH
DITDAH DIT_+=       DIT DITDAH _DIT_&gt;=&#39;a&#39;?  DITDAH _DIT_-&#39;a&#39;:0
DAH;}_DAH DIT DIT_  DAH{            __DIT DIT
DIT_&gt;3?_DAH     DIT          DIT_&gt;&gt;1 DAH:&#39;\0&#39;DAH;return
DIT_&amp;1?&#39;-&#39;:&#39;.&#39;;}__DIT DIT           DIT_ DAH _DAHDIT
DIT_;{DIT void DAH write DIT            1,&amp;DIT_,1 DAH;}
julien@ubuntu:~/c/ioccc$ gcc hague.c -o h
hague.c:10:2: warning: return type defaults to â€˜intâ€™ [-Wimplicit-int]
 ;main   DIT   DAH{_DAHDIT
  ^
hague.c: In function â€˜mainâ€™:
hague.c:6:17: warning: conflicting types for built-in function â€˜mallocâ€™
 #define DIT_DAH malloc
                 ^
hague.c:12:24: note: in expansion of macro â€˜DIT_DAHâ€™
 DITDAH   _DIT_,DITDAH  DIT_DAH DIT
                        ^
hague.c:15:35: warning: implicit declaration of function â€˜__DITâ€™ [-Wimplicit-function-declaration]
 __DAH;_DIT==DAH_DIT DIT _DIT  DAH;__DIT
                                   ^
hague.c:18:7: warning: implicit declaration of function â€˜_DAHâ€™ [-Wimplicit-function-declaration]
 _DIT_?_DAH DIT  DITDAH   DIT_ DAH:&#39;?&#39;DAH,__DIT
       ^
hague.c: At top level:
hague.c:25:6: warning: return type defaults to â€˜intâ€™ [-Wimplicit-int]
 DAH;}_DAH DIT DIT_ DAH{   __DIT DIT
      ^
hague.c: In function â€˜_DAHâ€™:
hague.c:25:6: warning: type of â€˜DIT_â€™ defaults to â€˜intâ€™ [-Wimplicit-int]
hague.c: At top level:
hague.c:27:17: warning: return type defaults to â€˜intâ€™ [-Wimplicit-int]
 DIT_&amp;1?&#39;-&#39;:&#39;.&#39;;}__DIT DIT   DIT_ DAH _DAHDIT
                 ^
hague.c: In function â€˜__DITâ€™:
hague.c:28:20: warning: implicit declaration of function â€˜writeâ€™ [-Wimplicit-function-declaration]
 DIT_;{DIT void DAH write DIT   1,&amp;DIT_,1 DAH;}
                    ^
/tmp/ccG1Yh1A.o: In function `main&#39;:
hague.c:(.text+0x14a): warning: the `gets&#39; function is dangerous and should not be used.
julien@ubuntu:~/c/ioccc$ ./h 
Hello, Holberton
.... . .-.. .-.. --- --..-- ? .... --- .-.. -... . .-. - --- -. 
julien@ubuntu:~/c/ioccc$ 
</code></pre>





  
      
</div>

        </div>
        <div data-role="task957" data-position="7">
            <div class=" clearfix gap" id="task-957">
<span id="user_id" data-id="100"></span>

    <div class="student_task_controls">
      
      <!-- button Done -->
        <button class="student_task_done btn btn-default no" data-task-id="957">
          <span class="no"><i class="fa fa-square-o"></i></span>
          <span class="yes"><i class="fa fa-check-square-o"></i></span>
          <span class="pending"><i class="fa fa-spinner fa-pulse"></i></span>
          Done<span class="no pending">?</span><span class="yes">!</span>
        </button>
        <br>
      
      <!-- button Who is done? -->
      <button class="users_done_for_task btn btn-default btn-sm" data-task-id="957" data-toggle="modal" data-target="#task-957-users-done-modal">
        Who is done?
      </button>
      <div class="modal fade users-done-modal" id="task-957-users-done-modal">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Batchmates who are done with "Fun with the preprocessor"</h4>
            </div>
            <div class="modal-body">
              <div class="list-group">
              </div>
                  <a class="btn btn-default btn-sm student_task_help" data-confirm="Are you sure you wish to notify people?" href="/tasks/957/mark_as_help">Help!</a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- button Help! / Canel help -->
          <button class="student_task_help btn btn-default btn-sm" data-task-id="957" >
            Help!
          </button>
    </div>

  <h4 class="task">
    6. Fun with the preprocessor
    <span class="alert alert-info mandatory-optional">
      #forfun
    </span>
  </h4>


  <!-- Progress vs Score -->

  

  <p>Write a program that <em>can</em> print <code>Hello, Holberton</code>, followed by a new line.</p>

<ul>
<li>You are not allowed to use more than one line of code</li>
<li>You are not allowed to use more than <code>32</code> characters in the file <code>101-preprocessor_abuse.c</code>, including the documentation of your functions and the preprocessor directives</li>
<li>You are not allowed to include other c files</li>
<li>You are not allowed to include other header files</li>
<li>Remember: your program should compile without any warnings, and pass all <code>Betty</code> checks for style and documentation</li>
</ul>

<p><em>This task is for fun and intellectual curiosity only. It will not be auto-reviewed. You will not get points from it</em></p>


    <p class="sm-gap"><strong>Repo:</strong></p>
    <ul>
      <li>GitHub repository: <code>holbertonschool-low_level_programming</code></li>
        <li>Directory: <code>0x0C-preprocessor</code></li>
        <li>File: <code>101-preprocessor_abuse.c</code></li>
    </ul>



  
      
</div>

        </div>
  </section>






      </article>

    </main>





    

      <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-67152800-6', 'auto');
        ga('send', 'pageview');
      </script>

  </body>
</html>
